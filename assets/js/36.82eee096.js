(window.webpackJsonp=window.webpackJsonp||[]).push([[36],{554:function(t,s,a){"use strict";a.r(s);var n=a(17),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"对-bfc-块级格式化上下文的理解"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#对-bfc-块级格式化上下文的理解"}},[t._v("#")]),t._v(" 对 BFC 块级格式化上下文的理解")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://s2.loli.net/2022/03/08/tOKGqTJR5VUCsFd.jpg",alt:"CSS_BFC"}})]),t._v(" "),a("p",[a("code",[t._v("BFC")]),t._v("是"),a("code",[t._v("CSS")]),t._v("中比较重要的一个概念，它不但能解决很多问题，还可以解释 CSS 中一些诡异的地方，所以搞懂 BFC 对于学习 CSS 来说是很有必要的。")]),t._v(" "),a("h2",{attrs:{id:"_1-什么是-bfc"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-什么是-bfc"}},[t._v("#")]),t._v(" 1. 什么是 BFC?")]),t._v(" "),a("p",[t._v("BFC 的全称是"),a("code",[t._v("Block Formatting Context")]),t._v("即块级格式化上下文，是 W3C CSS2.1 规范中的一个概念。它是==页面中的一块渲染区域==，并且有一套渲染规则，它决定了其子元素将如何定位，以及和其他元素的关系和相互作用。")]),t._v(" "),a("p",[t._v("具有 BFC 特性的元素可以看作是隔离了的独立容器，容器里面的元素不会在布局上影响到外面的元素，并且 BFC 具有普通容器所没有的一些特性。")]),t._v(" "),a("p",[t._v("🌈 通俗一点来讲，可以把 BFC 理解为一个封闭的大箱子，箱子内部的元素无论如何翻江倒海，都不会影响到外部。")]),t._v(" "),a("h2",{attrs:{id:"_2-bfc-的特点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-bfc-的特点"}},[t._v("#")]),t._v(" 2. BFC 的特点")]),t._v(" "),a("p",[t._v("我们从 "),a("code",[t._v("BFC")]),t._v(" 的原理开始看起，简单来说其实也就是 "),a("code",[t._v("BFC")]),t._v(" 的渲染规则，主要有下面几点：")]),t._v(" "),a("ul",[a("li",[t._v("垂直⽅向上，⾃上⽽下排列，和⽂档流的排列⽅式⼀致。")]),t._v(" "),a("li",[t._v("在 BFC 中上下相邻的两个容器的 margin 会重叠")]),t._v(" "),a("li",[t._v("计算 BFC 的⾼度时，需要计算浮动元素的⾼度")]),t._v(" "),a("li",[t._v("BFC 区域不会与浮动的容器发⽣重叠")]),t._v(" "),a("li",[t._v("BFC 是独⽴的容器，容器内部元素不会影响外部元素")]),t._v(" "),a("li",[t._v("每个元素的左 margin 值和容器的左 border 相接触")])]),t._v(" "),a("h2",{attrs:{id:"_3-如何触发-bfc"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-如何触发-bfc"}},[t._v("#")]),t._v(" 3. 如何触发 BFC?")]),t._v(" "),a("p",[t._v("既然 "),a("code",[t._v("BFC")]),t._v(" 是一块渲染区域，那这块渲染区域到底在哪，它又是有多大，而这些则由生成 "),a("code",[t._v("BFC")]),t._v(" 的元素决定（即哪些元素会生成 "),a("code",[t._v("BFC")]),t._v("），我们在这里也只列举一些比较常见的，完整的列表可以参考 "),a("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/Guide/CSS/Block_formatting_context",target:"_blank",rel:"noopener noreferrer"}},[t._v("MDN - 块格式化上下文")])]),t._v(" "),a("ul",[a("li",[a("p",[a("code",[t._v("float")]),t._v(" 属性不为 "),a("code",[t._v("none")]),t._v("，意思是，只要设置了浮动，当前元素就创建了 "),a("code",[t._v("BFC")])])]),t._v(" "),a("li",[a("p",[a("code",[t._v("overflow")]),t._v(" 的值不为 "),a("code",[t._v("visible")]),t._v("，可以让属性是 "),a("code",[t._v("hidden")]),t._v("、"),a("code",[t._v("auto")])])]),t._v(" "),a("li",[a("p",[a("code",[t._v("position")]),t._v(" 为 "),a("code",[t._v("absolute")]),t._v(" 或 "),a("code",[t._v("fixed")])])]),t._v(" "),a("li",[a("p",[a("code",[t._v("display")]),t._v(" 值为："),a("code",[t._v("inline-block")]),t._v("、"),a("code",[t._v("table-cell")]),t._v("、"),a("code",[t._v("table-caption")]),t._v("、"),a("code",[t._v("flex")]),t._v("等；")]),t._v(" "),a("ul",[a("li",[t._v("关于 "),a("code",[t._v("display：table")]),t._v("，之所以可以生成 "),a("code",[t._v("BFC")]),t._v("，主要原因在于 "),a("code",[t._v("table")]),t._v(" 会默认生成一个匿名的 "),a("code",[t._v("table-cell")])]),t._v(" "),a("li",[t._v("正是这个匿名的 "),a("code",[t._v("table-cell")]),t._v(" 生成了 "),a("code",[t._v("BFC")])])])]),t._v(" "),a("li",[a("p",[t._v("弹性元素（"),a("code",[t._v("display")]),t._v(" 为 "),a("code",[t._v("flex")]),t._v(" 或 "),a("code",[t._v("inline-flex")]),t._v(" 元素的直接子元素）")])]),t._v(" "),a("li",[a("p",[t._v("网格元素（"),a("code",[t._v("display")]),t._v(" 为 "),a("code",[t._v("grid")]),t._v(" 或 "),a("code",[t._v("inline-grid")]),t._v(" 元素的直接子元素）")])])]),t._v(" "),a("h2",{attrs:{id:"_4-bfc-有何作用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-bfc-有何作用"}},[t._v("#")]),t._v(" 4. BFC 有何作用？")]),t._v(" "),a("p",[t._v("对 BFC 的特性有了一定的了解后，可以利用这些规则，来解决我们平常遇到过的一些问题")]),t._v(" "),a("h3",{attrs:{id:"_1-解决-margin-的重叠问题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-解决-margin-的重叠问题"}},[t._v("#")]),t._v(" 1. 解决 margin 的重叠问题")]),t._v(" "),a("p",[t._v("CSS 的规范规定，相邻元素的外边距会重叠。BFC 可以解决该问题，由于 BFC 是⼀个独⽴的区域，内部的元素和外部的元素互不影响，将两个元素变为两个 BFC，就解决了 margin 重叠的问题。")]),t._v(" "),a("p",[t._v("👉 没有解决 margin 重叠问题的案例：")]),t._v(" "),a("div",{staticClass:"language-css extra-class"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token selector"}},[t._v("<style>\np")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("color")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" #f55"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("background")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" #fcc"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("width")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 200px"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("line-height")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 100px"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("text-align")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("center"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("margin")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 100px"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n</style>\n\n<body>\n  <p>Haha</p>\n  <p>Hehe</p>\n</body>\n")])])]),a("img",{staticStyle:{zoom:"67%"},attrs:{src:"https://s2.loli.net/2022/03/08/P9pjSTKwZsk3ive.png",alt:"image-20220308101744491"}}),t._v(" "),a("p",[t._v("👉 使用 BFC 解决 margin 重叠的问题：据规则可知，属于同一个 "),a("code",[t._v("BFC")]),t._v(" 的两个相邻 "),a("code",[t._v("box")]),t._v(" 的 "),a("code",[t._v("margin")]),t._v(" 会发生重叠，解决办法也很简单，我们可以给其中任意一个元素包裹一层容器，并触发该容器生成 "),a("code",[t._v("BFC")]),t._v("，那么此时的两个子元素就不属于同一个 "),a("code",[t._v("BFC")]),t._v("，所以就不会发生 "),a("code",[t._v("margin")]),t._v(" 重叠的现象了")]),t._v(" "),a("div",{staticClass:"language-css extra-class"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token selector"}},[t._v("<style>\n.wrap")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("overflow")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" hidden"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token selector"}},[t._v("p")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("color")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" #f55"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("background")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" #fcc"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("width")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 200px"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("line-height")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 100px"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("text-align")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("center"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("margin")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 100px"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n</style>\n\n<body>\n  <p>Haha</p>\n  <div class="),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"wrap"')]),t._v(">\n    <p>Hehe</p>\n  </div>\n</body>\n")])])]),a("img",{staticStyle:{zoom:"67%"},attrs:{src:"https://s2.loli.net/2022/03/08/2rhiK4VgnJXtU9Y.png",alt:"image-20220308102202461"}}),t._v(" "),a("h3",{attrs:{id:"_2-解决高度塌陷的问题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-解决高度塌陷的问题"}},[t._v("#")]),t._v(" 2. 解决⾼度塌陷的问题")]),t._v(" "),a("p",[t._v("在对⼦元素设置浮动后，⽗元素会发⽣⾼度塌陷，也就是⽗元素的⾼度变为 0。解决这个问题，只需要把⽗元素变成⼀个 BFC。常⽤的办法是给⽗元素设置"),a("code",[t._v("overflow:hidden")])]),t._v(" "),a("p",[t._v("👉 没有解决高度坍塌问题案例：")]),t._v(" "),a("div",{staticClass:"language-css extra-class"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token selector"}},[t._v("<style>\n.par")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("border")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 5px solid #fcc"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("width")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 300px"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".child")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("border")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 5px solid #f66"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("width")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("100px"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("height")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 100px"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("float")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" left"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n</style>\n\n<body>\n  <div class="),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"par"')]),t._v(">\n    <div class="),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"child"')]),t._v("></div>\n    <div class="),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"child"')]),t._v("></div>\n  </div>\n</body>\n")])])]),a("p",[a("img",{attrs:{src:"https://s2.loli.net/2022/03/08/Ca6RYjUy17zkfTd.png",alt:"高度坍塌问题1"}})]),t._v(" "),a("p",[t._v("👉 使用 BFC 解决高度坍塌问题：发生这种情况的原因是因为内部的 "),a("code",[t._v("child")]),t._v(" 元素使用了 "),a("code",[t._v("float")]),t._v("，使其脱离了文档流，故父元素的高度自然就没有了，解决办法有很多，原理只需要将父元素触发为 "),a("code",[t._v("BFC")]),t._v(" 即可")]),t._v(" "),a("div",{staticClass:"language-css extra-class"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".par")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("overflow")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" hidden"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[a("img",{attrs:{src:"https://s2.loli.net/2022/03/08/8TiaeHDBZXPSN6Q.png",alt:"高度坍塌问题2"}})]),t._v(" "),a("h3",{attrs:{id:"_3-创建自适应两栏布局"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-创建自适应两栏布局"}},[t._v("#")]),t._v(" 3. 创建⾃适应两栏布局")]),t._v(" "),a("p",[t._v("可以⽤来创建⾃适应两栏布局：左边的宽度固定，右边的宽度⾃适应。")]),t._v(" "),a("div",{staticClass:"language-css extra-class"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token selector"}},[t._v("<style>\nbody")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("width")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 300px"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("position")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" relative"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".aside")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("width")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 100px"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("height")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 150px"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("float")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" left"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("background")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" #f66"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".main")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("height")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 200px"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("background")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" #fcc"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n</style>\n\n<body>\n  <div class="),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"aside"')]),t._v("></div>\n  <div class="),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"main"')]),t._v("></div>\n</body>\n")])])]),a("p",[a("img",{attrs:{src:"https://s2.loli.net/2022/03/08/AhDJrCvxOVGXsZP.png",alt:"自适应两栏布局1"}})]),t._v(" "),a("p",[t._v("👉 使用 BFC 创建自适应两栏布局：根据规则可知，虽然存在浮动的元素 "),a("code",[t._v("aslide")]),t._v("，但 "),a("code",[t._v("main")]),t._v(" 的左边依然会与包含块的左边相接触，这是因为 "),a("code",[t._v("BFC")]),t._v(" 不会与 "),a("code",[t._v("float box")]),t._v(" 重叠，所以我们可以将 "),a("code",[t._v("main")]),t._v(" 生成为 "),a("code",[t._v("BFC")]),t._v(" 即可")]),t._v(" "),a("div",{staticClass:"language-css extra-class"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".main")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("overflow")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" hidden"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[a("img",{attrs:{src:"https://s2.loli.net/2022/03/08/cfaReklA9ULd7Ci.png",alt:"自适应两栏布局2"}})]),t._v(" "),a("h2",{attrs:{id:"参考文章"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#参考文章"}},[t._v("#")]),t._v(" 参考文章")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://zhuanlan.zhihu.com/p/131402341",target:"_blank",rel:"noopener noreferrer"}},[t._v("CSS：BFC 块格式化上下文")])]),t._v(" "),a("p",[a("a",{attrs:{href:"https://juejin.cn/post/6991867254803529765",target:"_blank",rel:"noopener noreferrer"}},[t._v("彻底搞懂 CSS 里的 BFC ｜ 8 月更文挑战")])]),t._v(" "),a("p",[a("a",{attrs:{href:"https://www.w3cplus.com/css/understanding-css-layout-block-formatting-context.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("理解 CSS 布局和 BFC")])]),t._v(" "),a("p",[a("a",{attrs:{href:"https://zhuanlan.zhihu.com/p/25321647",target:"_blank",rel:"noopener noreferrer"}},[t._v("10 分钟理解 BFC 原理")])])])}),[],!1,null,null,null);s.default=e.exports}}]);