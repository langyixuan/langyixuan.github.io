(window.webpackJsonp=window.webpackJsonp||[]).push([[43],{561:function(t,a,s){"use strict";s.r(a);var n=s(17),e=Object(n.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"web-audio-api-是什么"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#web-audio-api-是什么"}},[t._v("#")]),t._v(" Web Audio API 是什么？")]),t._v(" "),s("p",[t._v("最近很迷恋"),s("code",[t._v("Creative Coding")]),t._v(" 和 "),s("code",[t._v("Generative Art")]),t._v('，可以让代码与艺术结合是我一直非常想要尝试去做的事情。这个领域在中国的资料比较稀少，最近在学习"'),s("a",{attrs:{href:"https://www.mattdesl.com/",target:"_blank",rel:"noopener noreferrer"}},[t._v("MATT DESLAURIERS")]),t._v('"一位'),s("code",[t._v("Creative Coder")]),t._v("关于音频可视化领域的课程，在这个课程中了解到了"),s("code",[t._v("Web Audio API,")]),t._v("，这是我之前在学习 JavaScript 时没有注意到的 API。")]),t._v(" "),s("p",[t._v("Web Audio API 是浏览器里面的一个用来处理和合成声音的 Javascript 接口。这个 API 是被设计用来编写游戏声音引擎，以及来完成我们在各种音乐制作软件中对声音的编辑和混缩。你可以在 Web Audio API 的[官方文档]("),s("a",{attrs:{href:"https://link.zhihu.com/?target=http%3A//webaudio.github.io/web-audio-api/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Web Audio API")]),t._v(")里获得详细的信息。")]),t._v(" "),s("hr"),t._v(" "),s("h2",{attrs:{id:"一、区分-web-audio-api-和-html5-audio-tag"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#一、区分-web-audio-api-和-html5-audio-tag"}},[t._v("#")]),t._v(" 一、区分 Web Audio API 和 HTML5 Audio Tag")]),t._v(" "),s("p",[t._v("本文这里所说的"),s("code",[t._v("Web Audio API")]),t._v("和"),s("code",[t._v("HTML5 Audio Tag")]),t._v("元素并不是一个东西，其体量也完全不是一个等级的，两者的关系大概是下面这个样子的 👇")]),t._v(" "),s("img",{staticStyle:{zoom:"67%"},attrs:{src:"https://s2.loli.net/2022/05/28/ZzqQgP5JebjTtvn.png",alt:"image-20220526224949575"}}),t._v(" "),s("p",[t._v("HTML5 的 "),s("em",[t._v("audio")]),t._v(" 提供给开发人员一种对声音文件进行基本的读取，播放，暂停的功能， 同时还可以对声音文件的音量大小进行调整。但是 Web Audio API 是用于在浏览器里进行更为复杂的声音处理以及合成，其作用有：")]),t._v(" "),s("ul",[s("li",[t._v("对简单或复杂的声音进行混合；")]),t._v(" "),s("li",[t._v("精确控制声音的密度和节奏；")]),t._v(" "),s("li",[t._v("内置淡入/淡出，颗粒噪点，音调控制等效果；")]),t._v(" "),s("li",[t._v("灵活的处理在音频流的声道，使它们成为拆分和合并；")]),t._v(" "),s("li",[t._v("使用 MediaStream 的 getUserMedia()方法事实处理现场输入的音频，例如变声；")]),t._v(" "),s("li",[t._v("立体音效，可以支持多种 3D 游戏和沉浸式环境；")]),t._v(" "),s("li",[t._v("利用卷积引擎，创建各类线性音效，例如小/大房间、大教堂、音乐厅、洞穴、隧道、走廊、森林、圆形剧场等。尤其适用于创建高质量的房间效果。")]),t._v(" "),s("li",[t._v("高效的实时的时域和频分析，配合 CSS3 或 Canvas 或 webGL 可以实现音乐可视化支持；")]),t._v(" "),s("li",[t._v("以及其他多种音频波形算法控制，几乎就是把一个音频编辑类软件搬到 web 上。")])]),t._v(" "),s("h2",{attrs:{id:"二、音频上下文-audiocontext"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#二、音频上下文-audiocontext"}},[t._v("#")]),t._v(" 二、音频上下文 AudioContext")]),t._v(" "),s("h3",{attrs:{id:"👉-创建-audiocontext"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#👉-创建-audiocontext"}},[t._v("#")]),t._v(" 👉 创建 AudioContext")]),t._v(" "),s("p",[t._v("要使用"),s("code",[t._v("Web Audio API")]),t._v("， 第一步就是要创建一个"),s("code",[t._v("AudioContext")]),t._v("。音频中的"),s("code",[t._v("AudioContext")]),t._v("可以类比于"),s("code",[t._v("canvas")]),t._v("中的"),s("code",[t._v("canvas.getContext")]),t._v("。"),s("code",[t._v("AudioContext")]),t._v("是一个声音的容器，其中包含了一系列用来处理音频的 API。")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" audioContext "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("AudioContext")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" AudioContext "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" window"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("AudioContext "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" window"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("webkitAudioContext"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 浏览器兼容方式")]),t._v("\n")])])]),s("p",[t._v("我们可以输出 audioContext 实例对象来看看包含什么 API")]),t._v(" "),s("img",{staticStyle:{zoom:"80%"},attrs:{src:"https://s2.loli.net/2022/05/28/caVfmAZTOh15Xpg.png",alt:"image-20220526230907434"}}),t._v(" "),s("img",{staticStyle:{zoom:"80%"},attrs:{src:"https://s2.loli.net/2022/05/28/hLFiepbVljGmESO.png",alt:"image-20220526231926618"}}),t._v(" "),s("p",[t._v("其 API 不仅来源于自身,也从其父接口 "),s("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/API/BaseAudioContext",target:"_blank",rel:"noopener noreferrer"}},[s("code",[t._v("BaseAudioContext")])]),t._v("继承方法和属性")]),t._v(" "),s("img",{staticStyle:{zoom:"90%"},attrs:{src:"https://s2.loli.net/2022/05/28/yGoPDqeFE7Ok4Wb.png",alt:"image-20220527002045479"}}),t._v(" "),s("p",[t._v("上面的 API 又长又难记，但是对一个非专业音乐向的开发者来说只需了解一下即可。")]),t._v(" "),s("h3",{attrs:{id:"👉-auidonode"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#👉-auidonode"}},[t._v("#")]),t._v(" 👉 AuidoNode")]),t._v(" "),s("p",[s("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/API/AudioNode",target:"_blank",rel:"noopener noreferrer"}},[t._v("官方文档")])]),t._v(" "),s("p",[t._v("在了解如何控制发出的声音前. 需要了解"),s("code",[t._v("AudioNode")]),t._v("这个概念。")]),t._v(" "),s("p",[t._v("简单来说，所谓的音频处理其实就是标准的 IO 函数。从某个地方获取一个音频流(Input)，经过实时计算处理后发送去某个地方(Destination)，而这个处理也就是 Effect。")]),t._v(" "),s("img",{staticStyle:{zoom:"67%"},attrs:{src:"https://s2.loli.net/2022/05/28/cjmC9ve2JGBi3UP.png",alt:"image-20220527235941983"}}),t._v(" "),s("p",[s("code",[t._v("AudioContext")]),t._v("是用于管理和播放所有声音。使用 web audio api 来产生声音，创建一个或多个声音源，并将它们连接到由 AudioContext 示例提供的声音目的地。该连接不必直接连接，可以通过任意数量的中间 AudioNodes 来作为音频信号的处理模块。")]),t._v(" "),s("p",[t._v("例如吉他可以发出多种效果的声音，我们先把连着吉他的另一根线连在第一个效果器上，然后再把第一个效果器跟第二个效果器连起来，最后把第二个效果器跟音箱连起来。这样就通过串联来得到了两个声音效果。在 Web Audio API 中，我们也用同样的道理。每一个组件都是一个"),s("em",[t._v("Audio Node")]),t._v("，声音从第一个"),s("em",[t._v("Audio Node")]),t._v("流过第二个，第三个...直到最后一个"),s("em",[t._v("Audio Node")]),t._v("（通常是电脑的扬声器输出），以串联或者并联的方式来进行信号传输。")]),t._v(" "),s("h2",{attrs:{id:"三、web-audio-api-如何控制声音"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#三、web-audio-api-如何控制声音"}},[t._v("#")]),t._v(" 三、Web Audio API 如何控制声音")]),t._v(" "),s("p",[t._v("下面会通过两个小 demo 来演示 Web Audio API 是如何控制声音和音乐的播放")]),t._v(" "),s("h3",{attrs:{id:"👉-demo-1-控制声音"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#👉-demo-1-控制声音"}},[t._v("#")]),t._v(" 👉 Demo 1 控制声音")]),t._v(" "),s("img",{staticStyle:{zoom:"67%"},attrs:{src:"https://s2.loli.net/2022/05/28/x3iNR42CTun8sUp.png",alt:"image-20220528005853106"}}),t._v(" "),s("p",[t._v("创建一个 AudioContext 实例，这是音频处理程序运行的环境")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" audioCtx "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("AudioContext")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("创建一个振荡器，这是声音的源头")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" oscillator "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" audioCtx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("createOscillator")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("创建一个增益节点(音量节点)，用来调节音量的变化")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" gainNode "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" audioCtx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("createGain")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("设置音量和振荡器参数")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("gainNode"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("gain"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("value "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 音量 0~1")]),t._v("\noscillator"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("type "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"sine"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 振荡器输出正弦波")]),t._v("\noscillator"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("frequency"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("value "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("200")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 振荡频率200Hz")]),t._v("\n")])])]),s("p",[t._v("各种连接，参照上面的流程图")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("oscillator"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("connect")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("gainNode"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 发生源振荡器连接音量")]),t._v("\ngainNode"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("connect")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("audioCtx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("destination"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//音量连接扬声器")]),t._v("\n")])])]),s("p",[t._v("开始发声")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("oscillator"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("start")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("结束发声")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("oscillator"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("stop")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("audioCtx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("currentTime "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("FADING_TIME")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//现在起FADING_TIME秒后结束发声，没有FADING_TIME表示立刻结束")]),t._v("\n")])])]),s("p",[t._v("以上的 demo 中，整体大致都是这个流程：创建声源 → 中间处理程序 → 扬声器。当然如果不需要输出音效，就不需要连接到 audioCtx.destination 即可。")]),t._v(" "),s("h3",{attrs:{id:"👉-demo-2-控制音乐播放"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#👉-demo-2-控制音乐播放"}},[t._v("#")]),t._v(" 👉 Demo 2 控制音乐播放")]),t._v(" "),s("p",[t._v("下面通过一个小 demo 来看怎么使用 AudioContext 播放音乐。")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" mp3 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"http://127.0.0.1:5500/public/tornado.mp3"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// mp3音源")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" button "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("querySelector")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"button"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Demo1")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("constructor")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 参数为balanced表示平衡音频输出延迟和资源消耗")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("audioContext "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("AudioContext")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" latencyHint"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"balanced"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 获取音乐")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("async")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getMp3ArrayBuffer")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("url")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("fetch")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("url"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("then")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("r")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" r"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("arrayBuffer")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 初始化音乐")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("async")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("start")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" musicArrayBuffer "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("await")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getMp3ArrayBuffer")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("mp3"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// audioContext.decodeAudioData 将音频的ArrayBuffer解码成AudioBuffer")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" decodedAudioData "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("await")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("decode")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("musicArrayBuffer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("play")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("decodedAudioData"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 音频解码")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("async")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("decode")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("arrayBuffer")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("audioContext"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("decodeAudioData")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("arrayBuffer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 播放音乐")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("async")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("play")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("decodedAudioData")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" sourceNode "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("audioContext"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("createBufferSource")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    sourceNode"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("buffer "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" decodedAudioData"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    sourceNode"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("connect")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("audioContext"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("destination"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    sourceNode"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("start")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\nbutton"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("onclick")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Demo1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("start")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("上面的代码看起来比较晦涩，其流程就是 ：")]),t._v(" "),s("ul",[s("li",[t._v("通过 fetch 获取原始音频(ArrayBuffer)")]),t._v(" "),s("li",[t._v("通过 "),s("code",[t._v("audioContext.decodeAudioData()")]),t._v(" 方法把音频数据转换成我们所需要的 "),s("code",[t._v("buffer")]),t._v(" 格式；")]),t._v(" "),s("li",[t._v("使用"),s("code",[t._v("AudioBufferSourceNode")]),t._v("把解码后的数据挂载到音源上")]),t._v(" "),s("li",[t._v("通过"),s("code",[t._v("audioContext.destination")]),t._v("交由硬件播放")])]),t._v(" "),s("p",[t._v("其中有三个关键点：")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("source")])]),t._v(" "),s("li",[s("code",[t._v("connect")])]),t._v(" "),s("li",[s("code",[t._v("destination")])])]),t._v(" "),s("p",[t._v("你可以试着以这种方式来理解这三个关键点：首先我们通过 "),s("code",[t._v("audioContext.createBufferSource()")]),t._v(" 方法创建了一个「容器」 "),s("code",[t._v("source")]),t._v(" 并装入接收进来的「水」 "),s("code",[t._v("buffer")]),t._v("；其次通过「管道」 "),s("code",[t._v("connect")]),t._v(" 把它和「出口」 "),s("code",[t._v("destination")]),t._v(" 连接起来；最终「出口」 "),s("code",[t._v("destination")]),t._v(" 「流」出来的就是我们所听到的音频了。不知道这么讲，大家有没有比较好理解。")]),t._v(" "),s("h2",{attrs:{id:"文章总结"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#文章总结"}},[t._v("#")]),t._v(" 文章总结")]),t._v(" "),s("p",[t._v("Web Audio API 的使用非常的灵活和广泛，我是刚接触这个方面。后期会讲述一下利用 Web Audio API 进行音频可视化和创意编程方面的内容。")]),t._v(" "),s("h2",{attrs:{id:"参考文章"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#参考文章"}},[t._v("#")]),t._v(" 参考文章")]),t._v(" "),s("p",[s("a",{attrs:{href:"https://www.cnblogs.com/hanshuai/p/13620908.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("web audio api 入门")])]),t._v(" "),s("p",[s("a",{attrs:{href:"https://zhuanlan.zhihu.com/p/20543389",target:"_blank",rel:"noopener noreferrer"}},[t._v("Web Audio API 系列教程 1 - 介绍")])]),t._v(" "),s("p",[s("a",{attrs:{href:"https://zhuanlan.zhihu.com/p/28745323",target:"_blank",rel:"noopener noreferrer"}},[t._v("深入浅出 Web Audio Api")])]),t._v(" "),s("p",[s("a",{attrs:{href:"https://xiaotianxia.github.io/blog/vuepress/js/useful_webapis_audiocontext.html?_=193678675665",target:"_blank",rel:"noopener noreferrer"}},[t._v(" 让你的网页开口说话 —— audioContext API")])]),t._v(" "),s("p",[s("a",{attrs:{href:"https://www.zhangxinxu.com/wordpress/2017/06/html5-web-audio-api-js-ux-voice/",target:"_blank",rel:"noopener noreferrer"}},[t._v("利用 HTML5 Web Audio API 给网页 JS 交互增加声音")])])])}),[],!1,null,null,null);a.default=e.exports}}]);